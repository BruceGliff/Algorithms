class Assign : public Op
{
public:
    Assign(Node * r, Node * l) : Op{r, l} {}
    tmp calc() override
    {
        static_cast<Decl * >(right)->SetValue(left->calc());
    }
};

class Plus : public Op
{
public:
    Plus(Node * r, Node * l) : Op{r, l} {}
    tmp calc() override
    {
        return right->calc() + left->calc();
    }
};

class Minus : public Op
{
public:
    Minus(Node * r, Node * l) : Op{r, l} {}
    tmp calc() override
    {
        return right->calc() - left->calc();
    }
};

class Greater : public Op
{
public:
    Greater(Node * r, Node * l) : Op{r, l} {}
    tmp calc() override
    {
        return right->calc() > left->calc();
    }
};

class Less : public Op
{
public:
    Less(Node * r, Node * l) : Op{r, l} {}
    tmp calc() override
    {
        return right->calc() < left->calc();
    }
};